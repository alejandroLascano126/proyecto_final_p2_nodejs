<div class="container">

  <div class="d-flex align-items-center justify-content-between mb-3">
    <h2 class="mb-0 text-primary">Adjuntos</h2>
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAdjunto">
      <i class="bi bi-paperclip me-1"></i> Nuevo Adjunto
    </button>
  </div>

  <div class="card">
    <div class="card-body">

      <div class="row g-2 mb-3">
        <div class="col-md-4">
          <select id="filtroBitacora" class="form-select">
            <option value="">Todas las bitácoras</option>
          </select>
        </div>
        <div class="col-md-4">
          <input id="filtroTituloAdj" class="form-control" placeholder="Buscar por título..." />
        </div>
        <div class="col-md-4">
          <input id="filtroExtension" class="form-control" placeholder="Filtrar por extensión (png, pdf...)" />
        </div>
      </div>

      <div class="table-responsive">
        <table class="table table-hover align-middle" id="tablaAdjuntos">
          <thead class="table-dark">
            <tr>
              <th style="width:80px">ID</th>
              <th style="width:120px">Bitácora</th>
              <th>Título</th>
              <th style="width:140px">Extensión</th>
              <th style="width:160px">Archivo</th>
              <th style="width:180px">Creado</th>
              <th style="width:100px">Acciones</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>

    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="modalAdjunto" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <form id="formAdjunto">
        <div class="modal-header">
          <h5 class="modal-title" id="ma-title">Nuevo Adjunto</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="row g-3">
            <div class="col-md-6">
              <label class="form-label">Bitácora *</label>
              <select id="a-bitacora" class="form-select" required></select>
            </div>
            <div class="col-md-6">
              <label class="form-label">Título *</label>
              <input id="a-titulo" class="form-control" required />
            </div>
            <div class="col-12">
              <label class="form-label">Archivo *</label>
              <input id="a-archivo" type="file" class="form-control" accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.png,.jpg,.jpeg,.gif,.zip,.rar" required />
              <div class="form-text">Formatos permitidos: PDF, Word, Excel, PowerPoint, imágenes, texto, comprimidos</div>
            </div>
            <div id="info-archivo" class="col-12" style="display: none;">
              <div class="alert alert-info">
                <strong>Archivo seleccionado:</strong>
                <div id="nombre-archivo"></div>
                <div id="info-extension"></div>
                <div id="info-tamaño"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Cancelar</button>
          <button class="btn btn-primary" type="submit">Guardar</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
(function(){
  // ===== Refs =====
  const $tbody  = document.querySelector('#tablaAdjuntos tbody');
  const $selBit = document.getElementById('a-bitacora');
  const $titulo = document.getElementById('a-titulo');
  const $archivo = document.getElementById('a-archivo');
  const $infoArchivo = document.getElementById('info-archivo');
  const $nombreArchivo = document.getElementById('nombre-archivo');
  const $infoExtension = document.getElementById('info-extension');
  const $infoTamaño = document.getElementById('info-tamaño');
  const $form   = document.getElementById('formAdjunto');

  const $fBit   = document.getElementById('filtroBitacora');
  const $fTit   = document.getElementById('filtroTituloAdj');
  const $fExt   = document.getElementById('filtroExtension');

  const modalEl = document.getElementById('modalAdjunto');
  let modal = null;
  function ensureModal(){ if (!modal && window.bootstrap && modalEl) { modal = bootstrap.Modal.getOrCreateInstance(modalEl); } return modal; }

  // ===== Util =====
  async function j(url, opts){
    const fullUrl = url.startsWith('http') ? url : `http://localhost:3000${url}`;
    const response = await fetch(fullUrl, opts);
    if (!response.ok) {
      throw new Error(`HTTP ${response.status} ${fullUrl}`);
    }
    return response.json();
  }

  // ===== Combos =====
  async function cargarBitacorasSelects() {
    const data = await j('/api/bitacoras/consultaBitacoras'); // listado sirve para opciones
    const arr  = Array.isArray(data) ? data.map(b => ({ id: b.id, titulo: b.titulo || `Bitácora #${b.id}` })) : [];

    if (!arr.length) {
      $selBit.innerHTML = '<option value="">(Sin bitácoras)</option>';
      $selBit.disabled  = true;
      $fBit.innerHTML   = '<option value="">Todas las bitácoras</option>';
      return;
    }
    const opts = arr.map(b => `<option value="${b.id}">#${b.id} - ${b.titulo}</option>`).join('');
    $selBit.disabled  = false;
    $selBit.innerHTML = '<option value="">Seleccione Bitácora</option>' + opts;
    $fBit.innerHTML   = '<option value="">Todas las bitácoras</option>' + opts;
  }

  // ===== Listado =====
  function pintarFilas(list) {
    if (!Array.isArray(list) || !list.length) { $tbody.innerHTML = ''; return; }
    $tbody.innerHTML = list.map(a => `
      <tr>
        <td>${a.id}</td>
        <td>#${a.idBitacora}</td>
        <td>${a.titulo || ''}</td>
        <td><span class="badge text-bg-secondary">${a.extension || '-'}</span></td>
        <td>
          ${a.contenido ? `<a href="http://localhost:3000/api/adjuntos/descargar/${a.contenido}" target="_blank" class="btn btn-sm btn-outline-success">
            <i class="bi bi-download"></i> Descargar
          </a>` : 'Sin archivo'}
        </td>
        <td>${a.createdAt ? new Date(a.createdAt).toLocaleString() : ''}</td>
        <td class="text-nowrap">
          <button class="btn btn-sm btn-outline-danger" data-action="del" data-id="${a.id}" title="Eliminar">
            <i class="bi bi-trash"></i>
          </button>
        </td>
      </tr>
    `).join('');
  }

  async function cargarAdjuntosAplicandoFiltros() {
    const q = new URLSearchParams({
      idBitacora: $fBit.value || '',
      titulo:     ($fTit.value || '').trim(),
      extension:  $fExt.value || ''
    }).toString();
    const data = await j('/api/adjuntos/consultaAdjuntosEspecifica' + (q ? '?' + q : ''));
    pintarFilas(Array.isArray(data) ? data : []);
  }

  // ===== Event listener para archivo seleccionado =====
  $archivo.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      $nombreArchivo.textContent = file.name;
      $infoExtension.textContent = `Extensión: ${file.name.split('.').pop().toUpperCase()}`;
      $infoTamaño.textContent = `Tamaño: ${(file.size / 1024 / 1024).toFixed(2)} MB`;
      $infoArchivo.style.display = 'block';
      
      // Auto-llenar título si está vacío
      if (!$titulo.value.trim()) {
        $titulo.value = file.name.split('.')[0];
      }
    } else {
      $infoArchivo.style.display = 'none';
    }
  });

  // ===== CRUD =====
  $form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const file = $archivo.files[0];
    const idBitacora = +$selBit.value || null;
    const titulo = ($titulo.value || '').trim();
    
    if (!idBitacora || !titulo) { 
      alert('Bitácora y Título son obligatorios'); 
      return; 
    }
    
    if (!file) {
      alert('Debe seleccionar un archivo');
      return;
    }

    // Crear FormData para envío de archivo
    const formData = new FormData();
    formData.append('archivo', file);
    formData.append('idBitacora', idBitacora);
    formData.append('titulo', titulo);

    const isEdit = !!$form.dataset.editId;
    const url = isEdit ? `http://localhost:3000/api/adjuntos/actualizaAdjunto/${$form.dataset.editId}` : `http://localhost:3000/api/adjuntos/subirAdjunto`;
    const method = isEdit ? 'PUT' : 'POST';

    try {
      const response = await fetch(url, { method, body: formData });
      const result = await response.json();
      
      if (!response.ok) {
        throw new Error(result.error || 'Error al subir archivo');
      }
      
      $form.dataset.editId = '';
      $form.reset();
      $infoArchivo.style.display = 'none';
      ensureModal()?.hide();
      cargarAdjuntosAplicandoFiltros();
    } catch (error) {
      console.error('Error:', error);
      alert('Error al subir archivo: ' + error.message);
    }
  });

  $tbody.addEventListener('click', async (e) => {
    const btn = e.target.closest('button'); if (!btn) return;
    const id  = +btn.dataset.id;

    if (btn.dataset.action === 'del') {
      if (!confirm('¿Eliminar adjunto y archivo?')) return;
      try {
        await j(`/api/adjuntos/eliminarAdjunto/${id}`, { method: 'DELETE' });
        cargarAdjuntosAplicandoFiltros();
      } catch (error) {
        console.error('Error al eliminar:', error);
        alert('Error al eliminar el adjunto');
      }
    }
  });

  // ===== Filtros / Modal =====
  [$fBit, $fTit, $fExt].forEach(el => el && el.addEventListener('input', cargarAdjuntosAplicandoFiltros));
  $fBit.addEventListener('change', cargarAdjuntosAplicandoFiltros);
  modalEl.addEventListener('show.bs.modal', () => {
    cargarBitacorasSelects();
    $form.reset();
    $form.dataset.editId = '';
    $infoArchivo.style.display = 'none';
  });

  // ===== Init =====
  (async function init(){
    await cargarBitacorasSelects();
    await cargarAdjuntosAplicandoFiltros();
  })();
})();
</script>